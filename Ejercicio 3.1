package consola.pkg3.pkg1;
import java.util.Scanner;

class OperacionesMatrices {

    public static double[][] sumar(double[][] A, double[][] B) {
        if (A.length != B.length || A[0].length != B[0].length) {
            System.out.println("Error: Las matrices deben tener las mismas dimensiones para sumarse.");
            return null; 
        }
        int filas = A.length;
        int columnas = A[0].length;
        double[][] C = new double[filas][columnas];

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                C[i][j] = A[i][j] + B[i][j];
            }
        }
        return C;
    }

    public static double[][] multiplicar(double[][] A, double[][] B) {
        if (A[0].length != B.length) {
            System.out.println("Error: El numero de columnas de A debe coincidir con el numero de filas de B.");
            return null;
        }
        int filas = A.length;
        int columnas = B[0].length;
        int n = B.length;
        double[][] C = new double[filas][columnas];

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                for (int k = 0; k < n; k++) {
                    C[i][j] += A[i][k] * B[k][j];
                }
            }
        }
        return C;
    }
    
    public static double[][] inversa(double[][] A) {
        
        if (A.length != A[0].length) {
            System.out.println("Error: La matriz debe ser cuadrada para calcular la inversa.");
            return null;
        }
        int n = A.length;
        double[][] I = new double[n][n]; 
        double[][] copia = new double[n][n]; 
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                copia[i][j] = A[i][j];
                I[i][j] = (i == j) ? 1 : 0; 
            }
        }
        
        for (int i = 0; i < n; i++) {
          
            if (copia[i][i] == 0) {
                boolean cambiado = false;
                for (int k = i + 1; k < n; k++) {
                    if (copia[k][i] != 0) {
                        double[] tempFila = copia[i];
                        copia[i] = copia[k];
                        copia[k] = tempFila;
                        double[] tempFilaI = I[i];
                        I[i] = I[k];
                        I[k] = tempFilaI;
                        cambiado = true;
                        break;
                    }
                }
                
                if (!cambiado) {
                    System.out.println("Error: La matriz no es invertible.");
                    return null;
                }
            }
            
            double pivote = copia[i][i];
            for (int j = 0; j < n; j++) {
                copia[i][j] /= pivote;
                I[i][j] /= pivote;
            }

            for (int k = 0; k < n; k++) {
                if (k != i) {
                    double factor = copia[k][i];
                    for (int j = 0; j < n; j++) {
                        copia[k][j] -= factor * copia[i][j];
                        I[k][j] -= factor * I[i][j];
                    }
                }
            }
        }

        return I; 
    }
    
    public static double[] multiplicarMatrizVector(double[][] A, double[] v) {
        if (A[0].length != v.length) {
            System.out.println("Error: El numero de columnas de la matriz debe coincidir con el tamaÃ±o del vector.");
            return null;
        }
        int filas = A.length;
        int columnas = A[0].length;
        double[] resultado = new double[filas];

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                resultado[i] += A[i][j] * v[j];
            }
        }
        return resultado;
    }

    public static double[][] leerMatriz(Scanner sc) {
        System.out.print("Ingrese numero de filas: ");
        int filas = sc.nextInt();
        System.out.print("Ingrese numero de columnas: ");
        int columnas = sc.nextInt();

        double[][] M = new double[filas][columnas];
        System.out.println("Ingrese los elementos de la matriz:");
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                System.out.print("Elemento [" + i + "][" + j + "]: ");
                M[i][j] = sc.nextDouble();
            }
        }
        return M;
    }

    public static double[] leerVector(Scanner sc, int size) {
        double[] v = new double[size];
        System.out.println("Ingrese los elementos del vector:");
        for (int i = 0; i < size; i++) {
            System.out.print("Elemento [" + i + "]: ");
            v[i] = sc.nextDouble();
        }
        return v;
    }

    public static void imprimirMatriz(double[][] M) {
        if (M == null) return; 
        for (double[] fila : M) {
            for (double elem : fila) {
                System.out.printf("%.2f ", elem);
            }
            System.out.println();
        }
    }

    public static void imprimirVector(double[] v) {
        if (v == null) return;
        for (double elem : v) {
            System.out.printf("%.2f ", elem);
        }
        System.out.println();
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int opcion;
        
        do {
            System.out.println("\t MENU \t");
            System.out.println("1. Suma de matrices");
            System.out.println("2. Producto de matrices");
            System.out.println("3. Inversa de una matriz");
            System.out.println("4. Producto de una matriz por un vector");
            System.out.println("0. Salir");
            System.out.print("Seleccione opcion: ");
            opcion = sc.nextInt();
            
            switch (opcion) {
                case 1 -> {
                    System.out.println("Matriz A:");
                    double[][] A = OperacionesMatrices.leerMatriz(sc);
                    System.out.println("Matriz B:");
                    double[][] B = OperacionesMatrices.leerMatriz(sc);
                    System.out.println("Resultado de A+B:");
                    OperacionesMatrices.imprimirMatriz(OperacionesMatrices.sumar(A, B));
                }
                case 2 -> {
                    System.out.println("Matriz A:");
                    double[][] C = OperacionesMatrices.leerMatriz(sc);
                    System.out.println("Matriz B:");
                    double[][] D = OperacionesMatrices.leerMatriz(sc);
                    System.out.println("Resultado de A*B:");
                    OperacionesMatrices.imprimirMatriz(OperacionesMatrices.multiplicar(C, D));
                }
                case 3 -> {
                    System.out.println("Matriz (cuadrada):");
                    double[][] E = OperacionesMatrices.leerMatriz(sc);
                    System.out.println("Inversa de la matriz:");
                    OperacionesMatrices.imprimirMatriz(OperacionesMatrices.inversa(E));
                }
                case 4 -> {
                    System.out.println("Matriz A:");
                    double[][] F = OperacionesMatrices.leerMatriz(sc);
                    System.out.println("Vector:");
                    double[] v = OperacionesMatrices.leerVector(sc, F[0].length);
                    System.out.println("Resultado de A*v:");
                    OperacionesMatrices.imprimirVector(OperacionesMatrices.multiplicarMatrizVector(F, v));
                }
                case 0 -> System.out.println("Saliendo...");
                default -> System.out.println("Opcion invalida");
            }
            
        } while (opcion != 0);

        sc.close();
    }
}
